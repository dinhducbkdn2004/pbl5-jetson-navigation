"""
Main module for Jetson Navigation application
"""
from src.services.gps import GPSService
from src.services.api import APIService
from src.speech.voice import VoiceService
from src.navigation.navigator import Navigator
from src.config.settings import MAX_REROUTE_ATTEMPTS

def main():
    print("Starting Jetson Navigation System...")
    
    # Initialize services
    gps_service = GPSService()
    voice_service = VoiceService()
    api_service = APIService()
    
    # Initialize navigator
    navigator = Navigator(gps_service, voice_service, api_service)
    
    # Get destination from user
    destination = navigator.get_destination_from_user()
    
    # Get initial GPS position
    initial_lat, initial_lng = gps_service.wait_for_valid_location()
    
    # Navigation loop
    reroute_attempts = 0
    
    while reroute_attempts < MAX_REROUTE_ATTEMPTS:
        print(f"üó∫Ô∏è ƒêang y√™u c·∫ßu l·ªô tr√¨nh t·ª´ API (L·∫ßn {reroute_attempts + 1})...")
        response_data = navigator.request_route(initial_lat, initial_lng, destination)
        
        if response_data and 'steps' in response_data and response_data['steps']:
            steps = response_data['steps']
            
            # Reset reroute counter when we get a valid route
            reroute_attempts = 0
            
            # Follow the route
            success, new_lat, new_lng = navigator.follow_route(steps, initial_lat, initial_lng)
            
            # If navigation completed successfully
            if success:
                break
                
            # If we need to reroute
            if new_lat and new_lng:
                initial_lat, initial_lng = new_lat, new_lng
                reroute_attempts += 1
                continue
        
        else:
            print("‚ùå Kh√¥ng nh·∫≠n ƒë∆∞·ª£c l·ªô tr√¨nh ho·∫∑c l·ªô tr√¨nh r·ªóng t·ª´ API.")
            reroute_attempts += 1
            
            if response_data:
                error_message = response_data.get('error', 'Kh√¥ng th·ªÉ l·∫•y l·ªô tr√¨nh.')
                print(f"L·ªói API: {error_message}")
                voice_service.speak(f"L·ªói: {error_message}. Th·ª≠ l·∫°i.")
            else:
                voice_service.speak("Kh√¥ng th·ªÉ k·∫øt n·ªëi ho·∫∑c nh·∫≠n d·ªØ li·ªáu t·ª´ m√°y ch·ªß d·∫´n ƒë∆∞·ªùng. Th·ª≠ l·∫°i.")
            
            if reroute_attempts >= MAX_REROUTE_ATTEMPTS:
                print("‚ùå ƒê√£ th·ª≠ t√¨m l·∫°i ƒë∆∞·ªùng qu√° nhi·ªÅu l·∫ßn. D·ª´ng ch∆∞∆°ng tr√¨nh.")
                voice_service.speak("Kh√¥ng th·ªÉ t√¨m ƒë∆∞·ª£c ƒë∆∞·ªùng ƒëi sau nhi·ªÅu l·∫ßn th·ª≠.")
                break
    
    print("K·∫øt th√∫c ch∆∞∆°ng tr√¨nh.")

if __name__ == "__main__":
    main()